{"ast":null,"code":"var _jsxFileName = \"/home/amrtz/React/01-starting-project/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'input_type') {\n    return {\n      value: val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type = 'input_blur') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst passwordReducer = () => {\n  if (action.type = 'input_type_password') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === 'input_blur_password') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n};\nconst Login = props => {\n  _s();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  });\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"checking validity\");\n      setFormIsValid(enteredEmail.includes('@') && passwordState.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log(\"cleanup\");\n      clearTimeout(identifier);\n    };\n  }, [emailState, passwordState]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'input_type',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.trim().length > 6);\n  };\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'input_type_password',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.includes('@') && event.target.value.trim().length > 6);\n  };\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'input_blur'\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'input_blur_password'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState, passwordState);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"iIXQ3Eo/FpcIYj8wsWoJhXCTQ9U=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","identifier","setTimeout","console","log","enteredEmail","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","emailIsValid","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["/home/amrtz/React/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer =(state, action) => {\n  if(action.type ===  'input_type'){\n       return {value:val, isValid : action.val.includes('@')}\n  }\n  if(action.type = 'input_blur'){\n    return {value:state.value, isValid:state.value.includes('@')}\n  }\n\n  return{value: \"\", isValid: false}\n}\n\nconst passwordReducer = () => {\n  if (action.type = 'input_type_password'){\n    return {value:action.val, isValid: action.val.trim().length>6}\n\n  }\n  if(action.type=== 'input_blur_password'){\n    return{value:state.value, isValid:state.value.trim().length>6}\n  }\n}\n\nconst Login = (props) => {\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const[emailState, dispatchEmail] = useReducer(emailReducer, {value:\"\", isValid: false});\n  const[passwordState, dispatchPassword] = useReducer(passwordReducer, {value:\"\", isValid: false});\n\n  useEffect(()=>{\n   const identifier = setTimeout(() => {\n    console.log(\"checking validity\");\n    setFormIsValid(\n      enteredEmail.includes('@') && passwordState.trim().length>6\n    )\n    \n   }, 500);\n   \n   return ()=>{\n    console.log(\"cleanup\");\n    clearTimeout(identifier);\n   }\n\n  },[emailState, passwordState]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'input_type', val: event.target.value});\n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.trim().length>6\n    );\n    \n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'input_type_password', val: event.target.value});\n\n    setFormIsValid(\n      emailState.includes('@') && event.target.value.trim().length >6\n    )\n   \n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type:'input_blur'})\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type:'input_blur_password'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState, passwordState);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}